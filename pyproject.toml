[build-system]
requires = [
    "hatchling >=1.11.1,<2.0.0",
    "hatch-vcs >=0.3.0,<0.4",
]
build-backend = "hatchling.build"

[project]
name = "labelle"
description = "Open-source label printing software"
readme = "README.md"
url = "https://github.com/labelle-org/labelle"
authors = [{name = "Sebastian J. Bronner", email = "waschtl@sbronner.com"}]
maintainers = [
    {name = "Tomer Shalev", email = "tshalev@proofpoint.com"},
    {name = "Ben Mares", email = "services-labelle@tensorial.com"},
    {name = "Tomek SzczÄ™sny", email = "mctom@tlen.pl"},
]
license = "Apache-2.0"
license-file = "LICENSE"
dependencies = [
    "importlib-metadata; python_version<'3.8'",
    "appdirs",
    "Pillow>=8.1.2,<11",
    "PyQRCode>=1.2.1,<2",
    "python-barcode>=0.13.1,<1",
    "pyusb",
    "PyQt6",
]
classifiers = [
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Printing"
]
dynamic = ["version"]
requires-python = ">=3.8,<4"

[project.urls]
Homepage = "https://github.com/labelle-org/labelle"
source = "https://github.com/labelle-org/labelle"
tracker = "https://github.com/labelle-org/labelle/issues"

[project.scripts]
labelle = "labelle.command_line:main"
labelle-gui = "labelle.gui:main"

[tool.hatch.version]
source = "vcs"
# See configuration details in https://github.com/pypa/setuptools_scm
raw-options = {version_scheme = "no-guess-dev"}

[tool.hatch.build.hooks.vcs]
version-file = "src/labelle/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/labelle"]
exclude = ["labelle.png"]

[tool.isort]
src_paths = ["src"]
profile = "black"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
  py38
  py39
  py310
  py311
  py312

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
commands =
  pip check
  pip freeze
  labelle --version
  labelle --help
  labelle --preview "single line"
  labelle --preview multiple lines
  labelle --preview -qr "qr text"
  labelle --preview -c code128 "bc txt"
  labelle --preview -qr "qr text" qr caption
  labelle --preview -c code128 "bc txt" barcode caption

[testenv:{clean,build}]
description =
    Build (or clean) the package in isolation according to instructions in:
    https://setuptools.readthedocs.io/en/latest/build_meta.html#how-to-use-it
    https://github.com/pypa/pep517/issues/91
    https://github.com/pypa/build
# NOTE: build is still experimental, please refer to the links for updates/issues
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*
"""
